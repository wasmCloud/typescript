name: Examples

on:
  push:
    branches:
      - main
    tags:
      - '**'
  pull_request:
    branches:
      - main

permissions:
  contents: read

jobs:
  meta:
    runs-on: ubuntu-latest
    outputs:
      changed-components: ${{ steps.changes.outputs.components }}
      changed-providers: ${{ steps.changes.outputs.providers }}
      changed-ci: ${{ steps.changes.outputs.ci }}
      wash-version: ${{ steps.version.outputs.version }}
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Check for changes
        id: changes
        uses: dorny/paths-filter@de90cc6fb38fc0963ad72b210f1f284cd68cea36 # v3.0.2
        with:
          filters: |
            ci:
              - '.github/workflows/examples_.yml'
              - '.github/workflows/examples_component.yml'
              - '.github/workflows/examples_provider.yml'
            components:
              - 'examples/components/**'
            providers:
              - 'examples/providers/**'

      - name: Install `wash` CLI
        uses: taiki-e/install-action@86c23eed46c17b80677df6d8151545ce3e236c61 # v2.50.7
        with:
          tool: wash

      - name: Get Installed wash Version
        id: version
        run: |
          # Get the installed wash version
          echo "version=$(wash --version -o json | jq '.wash' -r | sed 's/^v//g')" >> $GITHUB_OUTPUT

  components:
    name: ${{ matrix.example.folder }}
    if: needs.meta.outputs.changed-ci == 'true' || needs.meta.outputs.changed-components == 'true'
    needs: [meta]
    secrets: inherit
    uses: ./.github/workflows/examples_component.yml
    with:
      folder: ${{ matrix.example.folder }}
      build-path: ${{ matrix.example.build-path || 'build' }}
      wasm-bin: ${{ matrix.example.wasm-bin }}
      test-command: ${{ matrix.example.test-command }}
      skip-wadm: ${{ matrix.example.skip-wadm && true || false }}
      force: ${{ needs.meta.outputs.changed-ci == 'true' }}
      wash-version: ${{ needs.meta.outputs.wash-version }}
    strategy:
      fail-fast: false
      matrix:
        example:
          # Sample matrix entry for examples
          # - folder: http-hello-world           # Folder name of the example within examples/components/*
          #   build-path: dist                   # Path to the build directory (default: build)
          #   wasm-bin: http-hello-world.wasm    # Path to the wasm binary after build
          #   test-command: TEST_RESULT=1        # Some command that will set TEST_RESULT to 0 or 1

          - folder: http-hello-world
            wasm-bin: http_hello_world_s.wasm
            test-command: |
              RESPONSE=$(curl http://127.0.0.1:8000 || echo '')
              [[ "$RESPONSE" == 'Hello from Typescript!' ]] && TEST_RESULT=1 || TEST_RESULT=0

          - folder: http-password-checker
            wasm-bin: http_password_checker_s.wasm
            test-command: |
              RESPONSE=$(curl http://127.0.0.1:8000/api/v1/check -d '{"value": "test"}' | jq -r '.status' || echo '')
              [[ "$RESPONSE" == 'success' ]] && TEST_RESULT=1 || TEST_RESULT=0

          - folder: http-server-with-hono
            build-path: dist
            wasm-bin: http_server_with_hono_s.wasm
            test-command: |
              EXPECTED="This is some JSON data."
              RESPONSE=$(curl http://127.0.0.1:8000/api/data | jq -r '.message')
              [[ "$RESPONSE" == "$EXPECTED" ]] && TEST_RESULT=1 || TEST_RESULT=0

          - folder: http-streaming
            wasm-bin: http_streaming_s.wasm
            test-command: |
              RESPONSE=$(curl http://127.0.0.1:8000 | base64 -d | wc -c)
              [[ "$RESPONSE" == '1048576' ]] && TEST_RESULT=1 || TEST_RESULT=0

          - folder: bundled-rsbuild
            wasm-bin: bundled_rsbuild_s.wasm
            skip-wadm: true
            test-command: |
              npm run install-and-build && npm run transpile
              RESPONSE=$(npm run --silent demo)
              [[ "$RESPONSE" == '15' ]] && TEST_RESULT=1 || TEST_RESULT=0

          - folder: bundled-esbuild
            wasm-bin: bundled_esbuild_s.wasm
            skip-wadm: true
            test-command: |
              npm run install-and-build && npm run transpile
              RESPONSE=$(npm run --silent demo)
              [[ "$RESPONSE" == '8' ]] && TEST_RESULT=1 || TEST_RESULT=0

  examples-check:
    needs: [components]
    if: ${{ always() }}
    uses: ./.github/workflows/workflow_check.yml
    with:
      pass-condition: ${{ contains(needs.*.result, 'failure') == false }}
