name: crate-versions

description: |
  Get the 3 latest versions of the specified crate from crates.io.

branding:
  icon: settings
  color: blue

inputs:
  crate:
    description: Name of the crate of which to fetch versions for
    required: true
  lookback:
    description: Number of versions to go back
    required: false
    default: "3"

runs:
  using: composite

  steps:
    - name: Fetch crate versions
      id: fetch_versions
      run: |
        # Fetch the crate information from crates.io
        CRATE_NAME=${{ inputs.crate }}
        RESPONSE=$(curl -s -H "User-Agent: wasmCloud-github-actions/1.0 (slack.wasmcloud.com)" "https://crates.io/api/v1/crates/$CRATE_NAME")
        # Extract all versions that are not yanked
        ALL_VERSIONS=$(echo $RESPONSE | jq -c -r '.versions | map(select(.yanked | not)) | map(.num) | map(select(test("^[0-9]+\\.[0-9]+\\.[0-9]+$")))')
        # Extract the latest 3 major versions (or minor versions if the crate is in the 0.x range)
        LAST_VERSIONS=$(echo $ALL_VERSIONS | jq -c -r 'unique_by(if . | startswith("0.") then split(".")[1] else split(".")[0] end) | sort_by(split(".") | map(tonumber)) | reverse | .[0:${{ inputs.lookback }}]')
        echo "versions=$LAST_VERSIONS" >> $GITHUB_OUTPUT
        echo "latest=$(echo $LAST_VERSIONS | jq -r '.[0]')" >> $GITHUB_OUTPUT
        echo "::group::Latest ${{ inputs.lookback }} versions of $CRATE_NAME"
        echo $LAST_VERSIONS | jq
        echo "::endgroup::"
      shell: bash

outputs:
  versions:
    description: The latest major versions of the crate.
    value: ${{ steps.fetch_versions.outputs.versions }}
  latest:
    description: The latest version of the crate.
    value: ${{ steps.fetch_versions.outputs.latest }}
